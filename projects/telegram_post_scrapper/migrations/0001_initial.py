# Generated by Django 5.0.1 on 2024-03-02 23:52

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bot_name', models.CharField(max_length=100)),
                ('bot_token', models.CharField(max_length=100, unique=True)),
                ('bot_link', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'bot_settings',
            },
        ),
        migrations.CreateModel(
            name='Channel_post_setting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('video', models.BooleanField(default=False)),
                ('video_caption', models.BooleanField(default=False)),
                ('photo', models.BooleanField(default=False)),
                ('photo_caption', models.BooleanField(default=False)),
                ('caption', models.BooleanField(default=False)),
                ('text', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Channel_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client_Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_id', models.CharField(default='29441076', max_length=100)),
                ('api_hash', models.CharField(default='2c170fe7bc8b8c8f8a1e1ad72db9710e', max_length=100)),
                ('phone', models.CharField(default='+998993485501', max_length=100)),
                ('token', models.CharField(blank=True, max_length=100, null=True)),
                ('session', models.FileField(blank=True, null=True, upload_to='session')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'client_settings',
            },
        ),
        migrations.CreateModel(
            name='Filename',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(max_length=50)),
                ('filename', models.CharField(max_length=100)),
                ('is_caption', models.BooleanField(default=False)),
                ('is_photo', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'filename',
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'note',
                'db_table': 'note',
            },
        ),
        migrations.CreateModel(
            name='SomeErrors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('error', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'some_errors',
                'db_table': 'some_errors',
            },
        ),
        migrations.CreateModel(
            name='Channels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_name', models.CharField(max_length=250)),
                ('channel_link', models.CharField(max_length=250)),
                ('channel_id', models.CharField(max_length=100, unique=True)),
                ('my_channel', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bot', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='telegram_post_scrapper.bot')),
                ('setting', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='telegram_post_scrapper.channel_post_setting')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='telegram_post_scrapper.channel_type')),
            ],
            options={
                'db_table': 'channels',
                'unique_together': {('channel_id', 'my_channel')},
            },
        ),
        migrations.CreateModel(
            name='Listening_channels',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('listening_channel', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='listening_channel', to='telegram_post_scrapper.channels')),
            ],
            options={
                'verbose_name_plural': 'listening_channels',
                'db_table': 'listening_channels',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_id', models.CharField(max_length=500, unique=True)),
                ('caption', models.BooleanField(default=False)),
                ('photo', models.BooleanField(default=False)),
                ('delete_status', models.BooleanField(default=True)),
                ('single_photo', models.BooleanField(default=False)),
                ('send_status', models.BooleanField(default=False)),
                ('photo_count', models.IntegerField(default=0)),
                ('end', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel_from', models.ForeignKey(blank=True, limit_choices_to={'my_channel': False}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='from_channel_messages', to='telegram_post_scrapper.channels')),
            ],
            options={
                'db_table': 'message',
            },
        ),
        migrations.CreateModel(
            name='Message_history',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sent_status', models.BooleanField(default=False)),
                ('time', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('from_channel', models.ForeignKey(blank=True, limit_choices_to={'my_channel': False}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='from_channel', to='telegram_post_scrapper.channels')),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='telegram_post_scrapper.message')),
                ('to_channel', models.ForeignKey(blank=True, limit_choices_to={'my_channel': True}, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to_channel', to='telegram_post_scrapper.channels')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='telegram_post_scrapper.channel_type')),
            ],
            options={
                'db_table': 'client_message_history',
            },
        ),
        migrations.CreateModel(
            name='Message_log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('log', models.TextField()),
                ('is_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='message_log', to='telegram_post_scrapper.message')),
            ],
            options={
                'verbose_name_plural': 'Message_log',
                'db_table': 'message_log',
            },
        ),
        migrations.CreateModel(
            name='KeywordChannelAds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('channel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='telegram_post_scrapper.channels')),
            ],
            options={
                'db_table': 'keywordchannelads',
                'unique_together': {('text', 'channel')},
            },
        ),
    ]
